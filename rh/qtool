#!/bin/bash

prog_name=$0

usage ()
{
    cat <<EOF
usage: $prog_name <cmd>

supportted cmds:

qemu-build:    build QEMU repository.
init-dev:      init dev environment for host
build-initrd:  build initrd.img from directory
EOF
    exit 1
}

err ()
{
    echo "ERROR: $@"
    exit 1
}

do_qemu_build ()
{
    local current=$(pwd)
    local pdir=$(dirname $current)
    local top=$(basename $current)

    if [[ "$top" != "bin" ]]; then
        echo "please run this under QEMU_ROOT/bin"
        return 1
    fi

    ../configure --target-list=x86_64-softmmu --enable-debug --enable-spice
    if [[ $? != 0 ]]; then
        echo "configure failed, stop here"
        return 1
    fi

    make -j8
    if [[ $? != 0 ]]; then
        echo "build failed... stop here"
        return 1
    fi
}

do_init_dev ()
{
    local files=".inputrc .bashrc .gitconfig .vimrc"
    local host="$1"

    if [[ -z "$host" ]]; then
        cat <<EOF
usage: $prog_name init-dev <host>

Init dev environment for <host>. <host> is required.
EOF
        return 1
    fi

    echo "copy SSH public key..."
    ssh-copy-id $host || err "failed copy SSH public key"

    echo "copy config files..."
    for file in $files; do
        path=/root/$file
        scp $path $host:$path || err "copy file $path failed"
    done
}

do_build_initrd ()
{
    local dir="$1"
    if [[ -z "$dir" ]]; then
        cat <<EOF
usage: $prog_name build-initrd <dir>

Build initrd.img file by packing dir.
EOF
        exit 1
    fi
    local img="$PWD/initrd.img"
    pushd $dir &> /dev/null
    find . | cpio -H newc -o | gzip > $img
    if [[ $? == 0 ]]; then
        echo "initrd created at $img"
    else
        echo "creation failed"
    fi
    popd &> /dev/null
}

cmd=$1

case $cmd in
    qemu-build) do_qemu_build ;;
    init-dev) do_init_dev $2 ;;
    build-initrd) do_build_initrd $2 ;;
    *)
        usage ;;
esac

exit $?
